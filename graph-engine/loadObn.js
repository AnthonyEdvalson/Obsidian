const admZip = require('adm-zip');
const fs = require('fs');

function loadObn(path) {
    let obnZip = new admZip(path);

    console.log("Loading obn...");
    
    function readZippedFile(name) {
        return JSON.parse(obnZip.getEntry(name).getData().toString());
    }

    function readSubgraph(name, savePath) {
        let dataIn = readZippedFile(name);
        let dataOut = { 
            output: dataIn.output,
            nodes: {}
        };

        let keys = [];

        for (let [k, v] of Object.entries(dataIn.nodes)) {
            dataOut.nodes[k] = { type: v.type };
            let ext;
            let warn = "";
            if (v.type === "code") {
                dataOut.nodes[k].inputs = v.inputs;
                ext = ".js";
                keys.push([k, k]);
                warn =  "//================================================================================//\n";
                warn += "//                            DO NOT EDIT THIS FILE                               //\n";
                warn += "//   It is automatically generated from an obn file, changes will not be saved.   //\n";
                warn += "//================================================================================//\n\n";
            }
            else {
                ext = ".json";
                keys.push([k, k + ext]);
            }
            
            fs.writeFileSync(savePath + k + ext, warn + v.file, err => {
                if (err) throw err;
            });
        }

        let indexContent = "module.exports = {\n";
        for (let k of keys) {
            indexContent += `\t"${k[0]}": require('./${k[1]}'),\n`;
        }
        indexContent += "};\n";

        fs.writeFileSync(savePath + "_index.js", indexContent, err => {
            if (err) throw err; 
        });

        fs.writeFileSync(savePath + "_graph.json", JSON.stringify(dataOut), err => {
            if (err) throw err;
        })

        /*obnZip.getEntries().forEach(i => {
            if (i.entryName.startsWith("node_modules/"))
                obnZip.extractEntryTo(i, savePath, true, true);
        });*/

        return dataOut;
    }

    let meta = readZippedFile("meta.json");
    let storePath = "stores/" + meta.name;

    if (!fs.existsSync(storePath))
        fs.mkdirSync(storePath);
  
    let obnData = {
        front: readSubgraph("front.json", "./front/src/pack/"),
        back: readSubgraph("back.json", "./pack/"),
        meta,
        storePath
    }

    console.log("Loaded obn data...");
    console.log("Packages loaded");

    return obnData;
}

module.exports = loadObn;