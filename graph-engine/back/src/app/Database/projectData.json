{
  "functions": {
    "28754be2-4455-400d-91ca-ba482239d980": {
      "name": "Table.Database",
      "type": "in",
      "sides": [
        "F",
        "B"
      ],
      "inputs": {
        "Default": null
      },
      "functionId": "28754be2-4455-400d-91ca-ba482239d980",
      "label": "Database"
    },
    "fb87980c-d023-4bfd-af4d-f4cd0785e23d": {
      "name": "Table.Editor",
      "type": "edit",
      "sides": [
        "F",
        "B"
      ],
      "inputs": {},
      "functionId": "fb87980c-d023-4bfd-af4d-f4cd0785e23d"
    },
    "fff9dc31-49ec-4ea4-80c3-950fae79c755": {
      "name": "Table.Model",
      "type": "code",
      "sides": [
        "B"
      ],
      "inputs": {
        "db": "28754be2-4455-400d-91ca-ba482239d980",
        "config": "fb87980c-d023-4bfd-af4d-f4cd0785e23d"
      },
      "functionId": "fff9dc31-49ec-4ea4-80c3-950fae79c755",
      "content": "const { DataTypes } = require('sequelize');\n\nlet tables = {};\n\nfunction main({config, db}) {\n  config = config();\n  console.log(tables, config.name)\n  return tables[config.name];\n}\n\nfunction start({config, db}) {\n  config = config();\n  db = db();\n\n  let columns = {};\n\n  for (let colDef of config.columns) {\n    columns[colDef.name] = {\n      type:            DataTypes[colDef.type],\n      defaultValue:    colDef.defaultValue,\n      allowNull:       colDef.allowNull,\n      primaryKey:      colDef.primaryKey,\n    }\n\n    if (colDef.foreignKey) {\n      let parts = colDef.foreignKey.split(\".\");\n      columns[colDef.name].references = {\n        model: parts[0],\n        key: parts[1] || \"id\"\n      };\n    }\n  }\n\n  if (config.simpleId) {\n    columns[\"id\"] = {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    }\n  }\n\n  let table = db.define(config.name, columns, {\n    timestamps: config.timestamps,\n    freezeTableName: true\n  });\n\n  table.sync();\n\n  tables[config.name] = table;\n}\n\nexport default { main, start };\n"
    },
    "09791cc2-ceda-4733-8b3a-e11d17fad58b": {
      "name": "Table",
      "type": "out",
      "sides": [
        "F",
        "B"
      ],
      "inputs": {
        "value": "fff9dc31-49ec-4ea4-80c3-950fae79c755"
      },
      "functionId": "09791cc2-ceda-4733-8b3a-e11d17fad58b",
      "description": "Defines a sequelize table via Sequelize.define(), returns a sequelize model.\n\n[https://sequelize.org/master/manual/model-basics.html](Sequelize.define() documentation)"
    },
    "e4de85eb-bd70-426b-9310-70aa666cba0c": {
      "name": "Database Connection.Editor",
      "type": "edit",
      "sides": [
        "F",
        "B"
      ],
      "inputs": {},
      "functionId": "e4de85eb-bd70-426b-9310-70aa666cba0c"
    },
    "275401ba-0906-44a8-abe8-89b434946bad": {
      "name": "Database Connection.Sequelize",
      "type": "code",
      "sides": [
        "B"
      ],
      "inputs": {
        "config": "e4de85eb-bd70-426b-9310-70aa666cba0c"
      },
      "functionId": "275401ba-0906-44a8-abe8-89b434946bad",
      "content": "const { Sequelize } = require('sequelize');\n\nlet db;\n\nfunction main() {\n  return db;\n}\n\nfunction start({config}) {\n  config = config();\n\n  console.log(config);\n\n  db = new Sequelize(config.databaseName, config.userName, config.password, {\n    dialect: config.dialect,\n    storage: config.storage\n  });\n}\n\nexport default { main, start };\n"
    },
    "ee4fb122-57ae-4ff9-b58f-a7160355c078": {
      "name": "Database Connection",
      "type": "out",
      "sides": [
        "F",
        "B"
      ],
      "inputs": {
        "value": "275401ba-0906-44a8-abe8-89b434946bad"
      },
      "functionId": "ee4fb122-57ae-4ff9-b58f-a7160355c078",
      "description": "Creates a connection to the database. Default connection URI will create an in-memory SQLite database. Returns a sequelize instance.\n\n[https://sequelize.org/master/manual/getting-started.html#connecting-to-a-database](How to connect)"
    }
  },
  "name": "Database"
}